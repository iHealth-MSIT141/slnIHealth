#pragma checksum "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "a8c3abcf8598902272ed968a33fdd92e401321ab"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Diary_DiaryMain), @"mvc.1.0.view", @"/Views/Diary/DiaryMain.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\_ViewImports.cshtml"
using prjIHealth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\_ViewImports.cshtml"
using prjIHealth.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8c3abcf8598902272ed968a33fdd92e401321ab", @"/Views/Diary/DiaryMain.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a16e691bc2a8572590ef329eb9d410d52ff20929", @"/_ViewImports.cshtml")]
    public class Views_Diary_DiaryMain : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<double[]>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/css/Chart.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Member/Edit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/member/edit"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Diary/DiaryMain"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Member/OrderList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Student/CandidateList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Student/CourseList"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Student/ViewCourseCalendar"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Problem/CheckReply"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_10 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/Coach/CreateResume"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_11 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("blog__btn"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_12 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frmMyBoby"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_13 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frmAddRecord"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_14 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("frmAddFood"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_15 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/Chart.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
  
    ViewData["Title"] = "iHealth 我的飲食日誌";

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n\r\n\r\n");
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "a8c3abcf8598902272ed968a33fdd92e401321ab9329", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <style>

        /*個人身體數據檔案樣式*/
        .bodyForm {
            margin-bottom: 3vw;
        }

            .bodyForm fieldset {
                border: 2px dotted green;
                border-radius: 20px;
                padding-bottom: 1vw;
            }

            .bodyForm legend {
                margin-left: 3vw;
                padding: 5px;
                width: 130px;
                font-size: 20px;
            }

        .form-control:disabled {
            background-color: transparent;
            color: black;
        }

        #selWorkload {
            width: 100%;
            border-radius: 5px;
        }

            #selWorkload:disabled {
                color: black;
                background-color: transparent;
            }

        .divEditBody {
            position: absolute;
            bottom: 1vw;
        }

        #btnQuitEdit {
            background-color: indianred;
        }
        /*飲食日誌樣式*/
        .fa-plus-circle {");
                WriteLiteral(@"
            padding: 0;
            border: none;
            margin-right: 10px;
            font-size: 26px;
            color: #7fad39;
            background-color: transparent;
            transition: 0.5s;
        }

            .fa-plus-circle:hover {
                -moz-transform: rotate(180deg);
                -webkit-transform: rotate(180deg);
                -o-transform: rotate(180deg);
                -ms-transform: rotate(180deg);
                transform: rotate(180deg);
            }

        .shoping-cart {
            padding: 0;
        }

        .shoping__cart__table table tbody tr td {
            padding: 10px 0 0 0;
        }

        .pro-qty {
            width: 130px;
            height: 30px;
        }

            .pro-qty .qtybtn {
                width: 10px;
            }

            .pro-qty input {
                width: 40px;
            }

        .icon_close {
            border: none;
            background-color: transparent;");
                WriteLiteral(@"
        }

        /*攝取量樣式*/
        .product__discount__title {
            margin-bottom: 0px;
        }

            .product__discount__title h2 {
                font-size: 22px;
                margin-bottom: 20px;
            }


        /*日期選擇器樣式*/
        #divDatepicker {
            margin-bottom: 40px;
            border: 4px solid #7fad39;
            border-radius: 20px;
            padding: 0;
            display: flex;
        }

            #divDatepicker input {
                font-size: 16px;
                background-color: #f5f5f5;
                border: none;
            }

        .fa-caret-left, .fa-caret-right {
            margin-bottom: 8px;
            border: none;
            background-color: transparent;
        }

        /*彈出視窗樣式*/
        .modal-title {
            color: #7fad39;
            font-weight: 800;
        }

        .modal-footer {
            justify-content: center;
        }

        /*彈出視窗-新增紀錄樣式*/
        #sel");
                WriteLiteral(@"Meal {
            width: auto;
            border: 1px solid #ced4da;
            border-radius: 5px;
        }

        #inpSearchName {
            font-size: 1rem;
            font-weight: 400;
            color: #495057;
            background-color: #fff;
            border: 1px solid #ced4da;
            display: inline;
            width: auto;
            border-radius: 5px;
        }

        #btnAddFood {
            float: right;
            border: none;
            background-color: transparent;
            color: #7fad39;
        }

        /*彈出視窗-新增食物樣式*/
        .text-danger {
            float: right;
        }

        .blog__btn {
            display: inline-block;
            font-size: 14px;
            color: #1c1c1c;
            text-transform: uppercase;
            letter-spacing: 1px;
            border: 1px solid #b2b2b2;
            padding: 14px 20px 12px;
            border-radius: 25px;
        }

            .blog__btn:visited {
       ");
                WriteLiteral(@"         color: #1c1c1c;
            }

            .blog__btn:hover {
                color: black;
                font-weight: 800;
            }

            .blog__btn:active {
                color: black;
                font-weight: 800;
            }

        .sidebar__item ul li a {
            border: dashed 2px #7fad39;
            border-top: none;
            border-left: none;
            border-right: none;
            padding-left: 1vw;
            margin-right: 8vw;
            margin-bottom: 1vh;
        }
    </style>
");
            }
            );
            WriteLiteral("\r\n");
            WriteLiteral("<section class=\"breadcrumb-section set-bg\" data-setbg=\"/img/banner/banner_mem.png\" id=\"bannerTop\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 text-center\">\r\n                <div class=\"breadcrumb__text\">\r\n");
            WriteLiteral("                    <h2 class=\"reveal_t1\">我的飲食日誌</h2>\r\n                    <div class=\"breadcrumb__option reveal_t1\">\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab15859", async() => {
                WriteLiteral("Home");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        <span>Member</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n<section class=\"product spad\">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n");
            WriteLiteral(@"            <div class=""col-lg-3 col-md-5 reveal_b1"">
                <div class=""sidebar"" style=""position:sticky;top:150px;"">
                    <div class=""sidebar__item"">
                        <h4>會員專區</h4>
                        <ul>

                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab17533", async() => {
                WriteLiteral("個人資料");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab18644", async() => {
                WriteLiteral("飲食日誌");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab19755", async() => {
                WriteLiteral("訂單查詢");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab20866", async() => {
                WriteLiteral("候選教練");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab21977", async() => {
                WriteLiteral("課程列表");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab23088", async() => {
                WriteLiteral("課程行事曆");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n                            <li>");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab24200", async() => {
                WriteLiteral("客服記錄");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("</li>\r\n\r\n                        </ul>\r\n                        <br />\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab25374", async() => {
                WriteLiteral("<span class=\"arrow_right\"></span>教練專區");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_10);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_11);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-lg-9 col-md-7\">\r\n");
            WriteLiteral("                <div class=\"row\">\r\n\r\n");
            WriteLiteral("                    <div class=\"col-lg-12 bodyForm reveal_b1\">\r\n                        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab26892", async() => {
                WriteLiteral("\r\n                            <fieldset class=\"row\">\r\n                                <legend>我的身體數據</legend>\r\n                                <canvas id=\"myBodyChart\" height=\"75\"></canvas>\r\n");
#nullable restore
#line 260 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                                  
                                    foreach (var b in Model)
                                    {

#line default
#line hidden
#nullable disable
                WriteLiteral("                                        <input");
                BeginWriteAttribute("value", " value=\"", 7256, "\"", 7266, 1);
#nullable restore
#line 263 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
WriteAttributeValue("", 7264, b, 7264, 2, false);

#line default
#line hidden
#nullable disable
                EndWriteAttribute();
                WriteLiteral(" type=\"hidden\" />\r\n");
#nullable restore
#line 264 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                                    }
                                

#line default
#line hidden
#nullable disable
                WriteLiteral(@"                                <div class=""col-lg-5"">
                                    <div class=""form-group"">
                                        <input class=""form-control"" id=""inpHeight"" type=""text"" pattern=""^[0-9]+(.[0-9])?$$"" placeholder=""請輸入身高(cm)"" required disabled />
                                    </div>
                                    <div class=""form-group"">
                                        <input class=""form-control"" id=""inpWeight"" type=""text"" pattern=""^[0-9]+(.[0-9])?$"" placeholder=""請輸入體重(kg)"" required disabled />
                                    </div>
                                    <div class=""form-group"" id=""divWorkload"">
");
                WriteLiteral(@"                                    </div>
                                </div>
                                <div class=""col-lg-5"" id=""divBodyNum"">
                                    <div class=""form-group"">
                                        <input class=""form-control"" id=""inpBMI"" type=""text"" placeholder=""BMI"" disabled />
                                    </div>
                                    <div class=""form-group"">
                                        <input class=""form-control"" id=""inpFat"" type=""text"" placeholder=""體脂率"" disabled />
                                    </div>
                                    <div class=""form-group"">
                                        <input class=""form-control"" id=""inpTDEE"" type=""text"" placeholder=""每日熱量消耗"" disabled />
                                    </div>
                                </div>
                                <div class=""col-lg-2"">
                                    <button type=""button"" class=""site-btn"" id=""bt");
                WriteLiteral(@"nQuitEdit"" hidden>放棄</button>
                                    <button type=""button"" class=""btn btn-info"" id=""btnDemo"">Demo</button>
                                    <div class=""divEditBody"">
                                        <button type=""button"" class=""site-btn"" id=""btnEditBody"">修改</button>
                                    </div>
                                </div>
                            </fieldset>
                        ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_12);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n                    </div>\r\n\r\n");
            WriteLiteral(@"                    <div class=""col-lg-8 reveal_b2"">
                        <div class=""section-title product__discount__title"">
                            <button class=""fa fa-plus-circle"" data-toggle=""modal"" data-target=""#addRecordModal"" onclick=""openRecordModal();""></button>
                            <h2>早餐</h2>
                            <section class=""shoping-cart"">
                                <div class=""container"">
                                    <div class=""row"">
                                        <div class=""col-lg-12"">
                                            <div class=""shoping__cart__table"">
                                                <table>
                                                    <tbody id=""tbdBreakfast"">
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                          ");
            WriteLiteral(@"          </div>
                                </div>
                            </section>
                        </div>

                        <div class=""section-title product__discount__title"">
                            <button class=""fa fa-plus-circle"" data-toggle=""modal"" data-target=""#addRecordModal"" onclick=""openRecordModal();""></button>
                            <h2>午餐</h2>
                            <section class=""shoping-cart"">
                                <div class=""container"">
                                    <div class=""row"">
                                        <div class=""col-lg-12"">
                                            <div class=""shoping__cart__table"">
                                                <table>
                                                    <tbody id=""tbdLunch"">
                                                    </tbody>
                                                </table>
                                            </div>
");
            WriteLiteral(@"                                        </div>
                                    </div>
                                </div>
                            </section>
                        </div>

                        <div class=""section-title product__discount__title"">
                            <button class=""fa fa-plus-circle"" data-toggle=""modal"" data-target=""#addRecordModal"" onclick=""openRecordModal();""></button>
                            <h2>晚餐</h2>
                            <section class=""shoping-cart"">
                                <div class=""container"">
                                    <div class=""row"">
                                        <div class=""col-lg-12"">
                                            <div class=""shoping__cart__table"">
                                                <table>
                                                    <tbody id=""tbdDinner"">
                                                    </tbody>
                                   ");
            WriteLiteral(@"             </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </section>
                        </div>

                        <div class=""section-title product__discount__title"">
                            <button class=""fa fa-plus-circle"" data-toggle=""modal"" data-target=""#addRecordModal"" onclick=""openRecordModal();""></button>
                            <h2>其他</h2>
                            <section class=""shoping-cart"">
                                <div class=""container"">
                                    <div class=""row"">
                                        <div class=""col-lg-12"">
                                            <div class=""shoping__cart__table"">
                                                <table>
                                                    <tbody id=""tbdElse"">
                        ");
            WriteLiteral(@"                            </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </section>
                        </div>

                        <hr />
                        <div id=""divChart""></div>
                    </div>

");
            WriteLiteral(@"                    <div class=""modal fade"" id=""addRecordModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel""
                         aria-hidden=""true"">
                        <div class=""modal-dialog modal-lg"" role=""document"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <h5 class=""modal-title"" id=""exampleModalLabel"">新增飲食日誌<span></span></h5>
                                    <button type=""button"" class=""close"" data-dismiss=""modal"" aria-label=""Close"">
                                        <span aria-hidden=""true"">&times;</span>
                                    </button>
                                </div>
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab37470", async() => {
                WriteLiteral(@"
                                    <div class=""modal-body"">
                                        <div class=""row"">
                                            <div class=""col-6"">
                                                <div class=""form-group"" id=""divSelMeal"">
");
                WriteLiteral(@"                                                </div>
                                                <div class=""form-group"">
                                                    <label>食物名稱<small style=""margin-left: 10px; color: #495057"">(請於右側列表點選食物)</small></label>
                                                    <input type=""text"" id=""inpFoodId"" name=""FFoodId"" hidden>
                                                    <input type=""text"" class=""form-control"" id=""inpFoodName"" name=""FFoodName"" placeholder=""請於右側列表點選食物"" required disabled>
                                                </div>
                                                <div class=""form-group"">
                                                    <label>數量</label>
                                                    <div class=""quantity"">
                                                        <div class=""pro-qty intaketQty"">
                                                            <span class=""dec qtybtn btnIntaketQty""></spa");
                WriteLiteral(@"n>
                                                            <input id=""inpQuantity"" name=""FQuantity"" type=""text"" value=""1"">
                                                            <span class=""inc qtybtn btnIntaketQty""></span>
                                                        </div>
                                                        <span id=""spnUnit"" name=""FUnit""></span>");
                WriteLiteral(@"
                                                    </div>
                                                </div>
                                            </div>
                                            <div class=""col-6"" style=""height:233px;overflow:auto"">

                                                <label style=""font-weight:800"">食物列表</label>
                                                <input type=""text"" id=""inpSearchFood"" placeholder=""搜尋食物名稱"">
                                                <button id=""btnAddFood"" type=""button"" data-toggle=""modal"" data-target=""#addFoodModal"" data-dismiss=""modal"">新增</button>

                                                <table class=""table table-hover table-sm"">
                                                    <tbody id=""tbdFoodList"">
                                                    </tbody>
                                                </table>
                                            </div>
                                      ");
                WriteLiteral(@"  </div>
                                    </div>
                                    <div class=""modal-footer"">
                                        <button type=""button"" class=""site-btn"" id=""btnSaveRecord"">儲存</button>
                                    </div>
                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_13);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n");
            WriteLiteral(@"                    <div class=""modal fade"" id=""addFoodModal"" tabindex=""-1"" role=""dialog"" aria-labelledby=""exampleModalLabel""
                         aria-hidden=""true"">
                        <div class=""modal-dialog"" role=""document"">
                            <div class=""modal-content"">
                                <div class=""modal-header"">
                                    <h5 class=""modal-title"" id=""exampleModalLabel"">新增食物<span></span></h5>
                                    <button type=""button"" class=""close"" data-toggle=""modal"" data-target=""#addRecordModal"" data-dismiss=""modal"" aria-label=""Close"">
                                        <span aria-hidden=""true"">&times;</span>
                                    </button>
                                </div>
                                <div class=""modal-body"">
                                    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab43109", async() => {
                WriteLiteral(@"
                                        <div class=""form-group"">
                                            <label>食物名稱</label><span class=""text-danger""></span>
                                            <input type=""text"" class=""form-control"" id=""inpNewFoodName"" name=""FFoodName"">
                                        </div>
                                        <div class=""form-group"">
                                            <label>單位</label>
                                            <input type=""text"" class=""form-control"" id=""inpNewUnit"" name=""FUnit"">
                                        </div>
                                        <div class=""form-group"">
                                            <label>單位熱量(kcal)</label>
                                            <input type=""text"" class=""form-control"" id=""inpNewCalories"" name=""FCalories"">
                                        </div>
                                    ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_14);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                                </div>
                                <div class=""modal-footer"">
                                    <button type=""button"" class=""site-btn"" id=""btnSaveFood"">新增</button>
                                    <button type=""button"" class=""btn btn-info"" id=""btnDemoFood"">Demo</button>
                                </div>
                            </div>
                        </div>
                    </div>

");
            WriteLiteral(@"                    <div class=""col-lg-4 reveal_b3"">
                        <div class=""checkout__order"" style=""text-align:center;position:sticky;top:150px;"" id=""divDateTake"">
                            <div id=""divDatepicker"">
                                <button class=""fa fa-caret-left"" id=""btnPrevDate""></button>
                                <input type=""date"" id=""inpDatepicker"" />
                                <button class=""fa fa-caret-right"" id=""btnNextDate""></button>
                            </div>
                            <div class=""section-title"">
                                <h2 style=""font-size:30px"">當日攝取</h2>
                            </div>
                            <h4 style=""font-size:26px;position:relative;bottom:20px"" id=""hTodayTake"">980 大卡</h4>
                            <div class=""section-title"">
                                <h2 style=""font-size:30px"" id=""hLave"">尚可攝取</h2>
                            </div>
                            <h4 style=""font");
            WriteLiteral(@"-size: 26px; position: relative; bottom: 20px"" id=""hTodayLave"">220 大卡</h4>
                            <div class=""blog__item__text""><a href=""#"" class=""blog__btn""><span class=""arrow_up""></span>TOP</a></div>
                        </div>
                    </div>

                </div>

");
            WriteLiteral("            </div>\r\n        </div>\r\n    </div>\r\n</section>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral("\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "a8c3abcf8598902272ed968a33fdd92e401321ab47528", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_15);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>

        var theTDEE;

        //Datepicker預設為今日日期
        var today;
        function getToday() {
            let date = new Date();
            let dd = date.getDate();
            let mm = date.getMonth() + 1;
            let yyyy = date.getFullYear();
            if (dd < 10) { dd = '0' + dd }
            if (mm < 10) { mm = '0' + mm }
            today = yyyy + '-' + mm + '-' + dd;
            $(""#inpDatepicker"").attr(""value"", today);
            $(""#inpDatepicker"").attr(""max"", today);
        }
        getToday();

        //新增select(免受template影響)
        $(""#divWorkload"").html(""<select id='selWorkload' required disabled><option value='' style='display:none'> 請選擇活動量</option ><option value='1.2'>趨於靜態</option><option value='1.375'>每周運動1~3天</option><option value='1.55'>每周運動3~5天</option><option value='1.72'>每周運動6~7天</option><option value='1.9'>長時間運動或體力勞動工作者</option></select >"");
        $(""#divSelMeal"").html(""<select name='FMeal' id='selMeal' class='form-group'><option>早");
                WriteLiteral(@"餐</option><option>午餐</option><option>晚餐</option><option>其他</option></select><label style='padding:8px'>吃了什麼呢?</label>"");

        //==========個人身體數據檔案==========
        //個人身體數據檔案設為唯讀
        function notEdit() {
            $(""#divBodyNum"").find(""input"").removeAttr(""hidden"");
            $(""#btnQuitEdit"").attr(""hidden"", ""hidden"");
            $(""#btnDemo"").attr(""hidden"", ""hidden"");
            $(""#inpHeight"").attr(""disabled"", ""disabled"");
            $(""#inpWeight"").attr(""disabled"", ""disabled"");
            $(""#selWorkload"").attr(""disabled"", ""disabled"");
            $(""#btnEditBody"").text(""修改"");
        }

        //顯示計算後身體數據+ call載入飲食日誌函式
        function showBodyRecord() {
            notEdit();
            $.get(""");
#nullable restore
#line 554 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
              Write(Url.Content("~/Diary/getBodyRecord"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""date"": $(""#inpDatepicker"").val() }, function (data) {
                if (data == null) {
                    $(""#inpHeight"").val(``);
                    $(""#inpWeight"").val(``);
                    $(""#selWorkload"").val("""");
                    $(""#inpBMI"").val(``);
                    $(""#inpFat"").val(``);
                    $(""#inpTDEE"").val(``);
                    theTDEE = 0;
                    loadDiary();
                }
                else {
                    let bmiResult = """";
                    if (data.numBMI < 18.5) {
                        bmiResult = ""過輕"";
                    }
                    else if (data.numBMI >= 18.5 && data.numBMI < 24) {
                        bmiResult = ""正常"";
                    }
                    else if (data.numBMI >= 24 && data.numBMI < 27) {
                        bmiResult = ""過重"";
                    }
                    else if (data.numBMI >= 27) {
                        bmiResult = ""肥胖"";
                    }");
                WriteLiteral(@"
                    $(""#inpHeight"").val(`身高: ${data.fHeight} cm`);
                    $(""#inpWeight"").val(`體重: ${data.fWeight} kg`);
                    $(""#selWorkload"").val(data.fWorkload);
                    $(""#inpBMI"").val(`BMI: ${data.numBMI}   ${bmiResult}`);
                    $(""#inpFat"").val(`體脂率: ${data.numFat}%`);
                    $(""#inpTDEE"").val(`每日熱量消耗: ${data.numTDEE} kcal`);
                    theTDEE = data.numTDEE;
                    loadDiary();
                }
            })
        }
        showBodyRecord();

        //修改+儲存身體數據按鈕事件
        $(""#btnEditBody"").click(function () {
            if ($(this).text() == ""修改"") {
                $(""#frmMyBoby"").find(""input"").val("""");
                $(""#btnQuitEdit"").removeAttr(""hidden"");
                $(""#btnDemo"").removeAttr(""hidden"");
                $(""#inpHeight"").removeAttr(""disabled"");
                $(""#inpWeight"").removeAttr(""disabled"");
                $(""#selWorkload"").removeAttr(""disabled"").val("""");");
                WriteLiteral(@"
                $(""#divBodyNum"").find(""input"").attr(""hidden"", ""hidden"");
                $(this).text(""儲存"");
            }
            else if ($(this).text() == ""儲存"") {
                let isNum = /^[0-9]+(.[0-9])?$/;
                if ($(""#inpHeight"").val() == null || $(""#inpWeight"").val() == null || $(""#selWorkload"").val() == """") {
                    alert(""儲存失敗，請確實填入身高、體重及選擇活動量。"");
                }
                else if (!isNum.test($(""#inpHeight"").val()) || !isNum.test($(""#inpWeight"").val())) {
                    alert(""儲存失敗，身高、體重請填數字。"");
                }
                else {
                    $(""#divBodyNum"").find(""input"").removeAttr(""hidden"");
                    $(""#btnQuitEdit"").attr(""hidden"", ""hidden"");
                    $(""#btnDemo"").attr(""hidden"", ""hidden"");
                    $(""#inpHeight"").attr(""disabled"", ""disabled"");
                    $(""#inpWeight"").attr(""disabled"", ""disabled"");
                    $(""#selWorkload"").attr(""disabled"", ""disabled"");
          ");
                WriteLiteral("          $.get(\"");
#nullable restore
#line 619 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                      Write(Url.Content("~/Diary/addBodyRecord"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""FHeight"": $(""#inpHeight"").val(), ""FWeight"": $(""#inpWeight"").val() , ""FWorkload"": $(""#selWorkload"").val(), ""FRecordDate"": $(""#inpDatepicker"").val() }, function () {
                        showBodyRecord();
                    })
                    $(this).text(""修改"");
                }
            }
        })
        //放棄修改身體數據按鈕事件
        $(""#btnQuitEdit"").click(function () {
            notEdit();
            showBodyRecord();
        })

        //Demo鍵
        $(""#btnDemo"").click(function () {
            $(""#inpHeight"").val(""171"");
            $(""#inpWeight"").val(""85"");
            $(""#selWorkload"").val(""1.375"");
        })

        //==========飲食日誌==========
        //載入飲食日誌 (在載入身體數據的函式中呼叫 for執行順序)
        var breakfastTake = 0;
        var lunchTake = 0;
        var dinnerTake = 0;
        var elseTake = 0;

        function loadDiary() {
            $.get(""");
#nullable restore
#line 647 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
              Write(Url.Content("~/Diary/getIntakeRecords"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""date"": $(""#inpDatepicker"").val() }, function (datas) {
                breakfastTake = 0;
                lunchTake = 0;
                dinnerTake = 0;
                elseTake = 0;
                let htmlBreakfast = """";
                let htmlLunch = """";
                let htmlDinner = """";
                let htmlElse = """";
                let total = 0;
                $.each(datas, function (idx, record) {
                    total += record.subtotal;
                    if (record.fMeal == ""早餐"") {
                        breakfastTake += record.subtotal;
                        htmlBreakfast += `<tr><td hidden>${record.fCalorieIntakeId}</td>`;
                        htmlBreakfast += `<td class=""col-lg-4""><h5>${record.fFoodName}</h5></td>`;
                        htmlBreakfast += `<td class=""col-lg-3""><div class=""quantity""><div class=""pro-qty diaryQty""><span class=""dec qtybtn"">-</span><span class=""dec qtybtn""></span>`;
                        htmlBreakfast += `<input type=""text");
                WriteLiteral(@""" value=""${record.fQuantity}"" readonly><span class=""inc qtybtn""></span><span class=""inc qtybtn"">+</span></div></div></td>`;
                        htmlBreakfast += `<td class=""col-lg-2"">${record.fUnit}</td>`;
                        htmlBreakfast += `<td class=""col-lg-2"">${record.subtotal}<small> kcal</small></td>`;
                        htmlBreakfast += `<td class=""col-lg-1""><button class=""icon_close""></button></td></tr>`;
                    }
                    else if (record.fMeal == ""午餐"") {
                        lunchTake += record.subtotal;
                        htmlLunch += `<tr><td hidden>${record.fCalorieIntakeId}</td>`;
                        htmlLunch += `<td class=""col-lg-4""><h5>${record.fFoodName}</h5></td>`;
                        htmlLunch += `<td class=""col-lg-3""><div class=""quantity""><div class=""pro-qty diaryQty""><span class=""dec qtybtn"">-</span><span class=""dec qtybtn""></span>`;
                        htmlLunch += `<input type=""text"" value=""${record.fQuantity}"" readonly");
                WriteLiteral(@"><span class=""inc qtybtn""></span><span class=""inc qtybtn"">+</span></div></div></td>`;
                        htmlLunch += `<td class=""col-lg-2"">${record.fUnit}</td>`;
                        htmlLunch += `<td class=""col-lg-2"">${record.subtotal}<small> kcal</small></td>`;
                        htmlLunch += `<td class=""col-lg-1""><button class=""icon_close""></button></td></tr>`;
                    }
                    else if (record.fMeal == ""晚餐"") {
                        dinnerTake += record.subtotal;
                        htmlDinner += `<tr><td hidden>${record.fCalorieIntakeId}</td>`;
                        htmlDinner += `<td class=""col-lg-4""><h5>${record.fFoodName}</h5></td>`;
                        htmlDinner += `<td class=""col-lg-3""><div class=""quantity""><div class=""pro-qty diaryQty""><span class=""dec qtybtn"">-</span><span class=""dec qtybtn""></span>`;
                        htmlDinner += `<input type=""text"" value=""${record.fQuantity}"" readonly><span class=""inc qtybtn""></span><span class=");
                WriteLiteral(@"""inc qtybtn"">+</span></div></div></td>`;
                        htmlDinner += `<td class=""col-lg-2"">${record.fUnit}</td>`;
                        htmlDinner += `<td class=""col-lg-2"">${record.subtotal}<small> kcal</small></td>`;
                        htmlDinner += `<td class=""col-lg-1""><button class=""icon_close""></button></td></tr>`;
                    }
                    else if (record.fMeal == ""其他"") {
                        elseTake += record.subtotal;
                        htmlElse += `<tr><td hidden>${record.fCalorieIntakeId}</td>`;
                        htmlElse += `<td class=""col-lg-4""><h5>${record.fFoodName}</h5></td>`;
                        htmlElse += `<td class=""col-lg-3""><div class=""quantity""><div class=""pro-qty diaryQty""><span class=""dec qtybtn"">-</span><span class=""dec qtybtn""></span>`;
                        htmlElse += `<input type=""text"" value=""${record.fQuantity}"" readonly><span class=""inc qtybtn""></span><span class=""inc qtybtn"">+</span></div></div></td>`;
          ");
                WriteLiteral(@"              htmlElse += `<td class=""col-lg-2"">${record.fUnit}</td>`;
                        htmlElse += `<td class=""col-lg-2"">${record.subtotal}<small> kcal</small></td>`;
                        htmlElse += `<td class=""col-lg-1""><button class=""icon_close""></button></td></tr>`;
                    }
                })

                $(""#divChart"").html(`<canvas id=""myPieChart"" style=""width:40%;height:fit-content""></canvas>`);
                const ctx = $('#myPieChart');
                const myChart = new Chart(ctx, {
                    type: 'doughnut',
                    data: {
                        labels: [
                            '早餐',
                            '午餐',
                            '晚餐',
                            '其他'
                        ],
                        datasets: [{
                            label: 'My First Dataset',
                            data: [breakfastTake, lunchTake, dinnerTake, elseTake],
                            backgrou");
                WriteLiteral(@"ndColor: [
                                'rgba(255, 206, 86, 0.8)',
                                'rgba(54, 162, 235, 0.8)',
                                'rgba(75, 192, 192, 0.8)',
                                'rgba(255, 99, 132, 0.8)'
                            ],
                            hoverOffset: 4
                        }]
                    }
                });

                $(""#tbdBreakfast"").html(htmlBreakfast);
                $(""#tbdLunch"").html(htmlLunch);
                $(""#tbdDinner"").html(htmlDinner);
                $(""#tbdElse"").html(htmlElse);
                $(""#hTodayTake"").text(total + "" 大卡"");
                let lave = theTDEE - total;
                if (lave < 0) {
                    $(""#hLave"").text(""攝取超出"");
                    $(""#hTodayLave"").text((0 - lave).toString() + "" 大卡"");
                }
                else {
                    $(""#hLave"").text(""尚可攝取"");
                    $(""#hTodayLave"").text(lave.toString() + "" 大卡"");
     ");
                WriteLiteral(@"           }

                var proQty = $('.diaryQty');
                proQty.on('click', '.qtybtn', function () {
                    var $button = $(this);
                    var oldValue = $button.parent().find('input').val();
                    if ($button.hasClass('inc')) {
                        var newVal = parseFloat(oldValue) + 1;
                    } else {
                        // Don't allow decrementing below zero
                        if (oldValue > 2) {
                            var newVal = parseFloat(oldValue) - 1;
                        } else {
                            newVal = 1;
                        }
                    }
                    $button.parent().find('input').val(newVal);
                });
                proQty.on('click', '.qtybtn', changeTakeQty);
                $("".icon_close"").on(""click"", delCalorieIntake);
            })
        }

        //開啟新增紀錄彈出視窗時清空欄位
        function openRecordModal() {
            $(""#selMeal"").v");
                WriteLiteral(@"al($(event.target).next().text());
            $(""#inpFoodId"").val("""");
            $(""#inpFoodName"").val("""");
            $(""#inpQuantity"").val(""1"");
            $(""#inpSearchFood"").val("""");
            loadAllFoods();
        }

        //修改攝取數量
        function changeTakeQty() {
            let FQuantity = $(event.target).parent().find('input').val();
            let FCalorieIntakeId = $(event.target).closest(""tr"").children(""td:eq(0)"").text();
            $.get(""");
#nullable restore
#line 776 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
              Write(Url.Content("~/Diary/editCalorieIntake"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""FCalorieIntakeId"": FCalorieIntakeId, ""FQuantity"": FQuantity }, function () {
                loadDiary();
            })
        }

        //刪除紀錄
        function delCalorieIntake() {
            if (confirm(""確定要刪除嗎?"")) {
                let FCalorieIntakeId = $(event.target).closest(""tr"").children(""td:eq(0)"").text();
                $.get(""");
#nullable restore
#line 785 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                  Write(Url.Content("~/Diary/delCalorieIntake"));

#line default
#line hidden
#nullable disable
                WriteLiteral("\", { \"FCalorieIntakeId\": FCalorieIntakeId }, function () {\r\n                    loadDiary();\r\n                })\r\n            }\r\n        }\r\n\r\n        //==========彈出視窗-新增紀錄==========\r\n        //載入食物列表\r\n        function loadAllFoods() {\r\n            $.get(\"");
#nullable restore
#line 794 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
              Write(Url.Content("~/Diary/loadAllFoods"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", {}, function (datas) {
                let html = """";
                $.each(datas, function (idx,food) {
                    html += `<tr onclick='trFoodClick();'>`;
                    html += `<td hidden>${food.fFoodId}</td>`;
                    html += `<td>${food.fFoodName}</td>`;
                    html += `<td>/${food.fUnit}</td>`;
                    html += `<td style=""text-align:end"">${food.fCalories} 大卡</td></tr>`;
                })
                $(""#tbdFoodList"").html(html);
            })
        }
        loadAllFoods();

        //點擊食物選單自動填入
        function trFoodClick() {
            let theTr = $(event.target).parent();
            $(""#inpFoodId"").val(theTr.children(""td:eq(0)"").text());
            $(""#inpFoodName"").val(theTr.children(""td:eq(1)"").text());
            $(""#spnUnit"").text(theTr.children(""td:eq(2)"").text());
        }

        //儲存飲食紀錄
        $(""#btnSaveRecord"").click(function () {
            let isNum = /^[0-9]+(.[0-9])?$/;
            if ($(""");
                WriteLiteral("#inpFoodName\").val() == \"\") {\r\n                alert(\"儲存失敗，請選擇欲輸入的食物。\");\r\n            }\r\n            else if (!isNum.test($(\"#inpQuantity\").val())) {\r\n                alert(\"儲存失敗，數量請填入數字。\");\r\n            }\r\n            else {\r\n                $.get(\"");
#nullable restore
#line 826 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                  Write(Url.Content("~/Diary/addCalorieIntake"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""FIntakeTime"": $(""#inpDatepicker"").val(), ""FFoodId"": $(""#inpFoodId"").val(), ""FQuantity"": $(""#inpQuantity"").val(), ""FMeal"": $(""#selMeal"").val() }, function () {
                    loadDiary();
                })
                $('#addRecordModal').modal('hide');
            }
        })

        //搜尋食物
        $(""#inpSearchFood"").keyup(function () {
            if ($(""#inpSearchFood"").val() == """") {
                loadAllFoods();
            }
            else {
                $.get(""");
#nullable restore
#line 839 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                  Write(Url.Content("~/Diary/searchFood"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""txtKeyword"": $(""#inpSearchFood"").val() }, function (datas) {
                    let html = """";
                    $.each(datas, function (idx, food) {
                        html += `<tr onclick='trFoodClick();'>`;
                        html += `<td hidden>${food.fFoodId}</td>`;
                        html += `<td>${food.fFoodName}</td>`;
                        html += `<td>/${food.fUnit}</td>`;
                        html += `<td style=""text-align:end"">${food.fCalories} 大卡</td></tr>`;
                    })
                    $(""#tbdFoodList"").html(html);
                })
            }
        })

        //開啟新增食物彈出視窗時清空欄位
        $(""#btnAddFood"").click(function () {
            $(""#addFoodModal"").find(""input"").val("""").end().find("".text-danger"").text("""");
        })

        //==========彈出視窗-新增食物==========
        //輸入時驗證食物名稱有無重複
        $(""#inpNewFoodName"").keyup(function () {
            if ($(""#inpNewFoodName"").val() != """") {
                $.get(""");
#nullable restore
#line 862 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                  Write(Url.Content("~/Diary/checkFoodName"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""txtKeyword"": $(""#inpNewFoodName"").val() }, function (datas) {
                    console.log(datas)
                    if (datas.length != 0) {
                        $(""#inpNewFoodName"").prev().text(""已存在此食物。"");
                    }
                    else {
                        $(""#inpNewFoodName"").prev().text("""");
                    }
                })
            }
            else {
                $(""#inpNewFoodName"").prev().text("""");
            }
        })

        //儲存食物按鈕事件
        $(""#btnSaveFood"").click(function () {
            $(""#inpNewFoodName"").trigger(""keyup"");
            let isNum = /^\d+$/;
            if ($(""#inpNewFoodName"").val() == null || $(""#inpNewUnit"").val() == null || $(""#inpNewCalories"").val() == """") {
                alert(""儲存失敗，請確實填入食物名稱、單位及單位熱量。"");
            }
            else if ($(""#inpNewFoodName"").prev().text() == ""已存在此食物。"") {
                alert(""儲存失敗，已存在此食物。"");
            }
            else if (!isNum.test($(""#inpNewCalories");
                WriteLiteral("\").val())) {\r\n                alert(\"儲存失敗，單位熱量請填入正整數值。\");\r\n            }\r\n            else {\r\n                $.get(\"");
#nullable restore
#line 891 "C:\ispan\GitHub\slnIHealth\0802n7\prjIHealth\Views\Diary\DiaryMain.cshtml"
                  Write(Url.Content("~/Diary/addFoodCalory"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@""", { ""FFoodName"": $(""#inpNewFoodName"").val(), ""FUnit"": $(""#inpNewUnit"").val(), ""FCalories"": $(""#inpNewCalories"").val() }, function (data) {
                    loadAllFoods();
                    $(""#inpSearchFood"").val(data.fFoodName);
                    $(""#inpSearchFood"").trigger(""keyup"");
                    $(""#inpFoodId"").val(data.fFoodId);
                    $(""#inpFoodName"").val(data.fFoodName);
                    $(""#spnUnit"").text(data.fUnit);
                    $(""#inpSearchFood"").keyup();
                })
                $('#addFoodModal').modal('hide');
                $('#addRecordModal').modal('show');

            }
        })


        //Demo鍵
        $(""#btnDemoFood"").click(function () {
            $(""#inpNewFoodName"").val(""葡萄軟糖"");
            $(""#inpNewUnit"").val(""包"");
            $(""#inpNewCalories"").val(""165"");
        })

        //==========日期、攝取量計算==========
        //Datepicker事件
        $(""#inpDatepicker"").change(function () {
            showBodyReco");
                WriteLiteral(@"rd();
        })
        //前一天按鈕事件
        $(""#btnPrevDate"").click(function () {
            let date = new Date($(""#inpDatepicker"").val().replace(/-/g, ""/""));
            date.setDate(date.getDate() - 1);
            let dd = date.getDate();
            let mm = date.getMonth() + 1;
            let yyyy = date.getFullYear();
            if (dd < 10) { dd = '0' + dd }
            if (mm < 10) { mm = '0' + mm }
            let theDate = yyyy + '-' + mm + '-' + dd;
            $(""#inpDatepicker"").val(theDate);
            showBodyRecord();
        })
        //後一天按鈕事件
        $(""#btnNextDate"").click(function () {
            if ($(""#inpDatepicker"").val() < today) {
                let date = new Date($(""#inpDatepicker"").val().replace(/-/g, ""/""));
                date.setDate(date.getDate() + 1);
                let dd = date.getDate();
                let mm = date.getMonth() + 1;
                let yyyy = date.getFullYear();
                if (dd < 10) { dd = '0' + dd }
              ");
                WriteLiteral(@"  if (mm < 10) { mm = '0' + mm }
                let theDate = yyyy + '-' + mm + '-' + dd;
                $(""#inpDatepicker"").val(theDate);
                showBodyRecord();
            }
        })

        //==========圖表==========

        const labels = [
            '九月',
            '十月',
            '十一月',
            '十二月',
            '一月',
            '二月',
            '三月',
            '四月',
            '五月',
            '六月',
            '七月',
            '八月'
        ];
        const inputs = $(""#myBodyChart"").nextAll(""input"");
        const data = {
            labels: labels,
            datasets: [{
                label: '近一年BMI曲線',
                backgroundColor: '#ffc83d',
                borderColor: '#ffc83d',
                data: [inputs.eq(11).val(), inputs.eq(10).val(), inputs.eq(9).val(), inputs.eq(8).val(), inputs.eq(7).val(), inputs.eq(6).val(), inputs.eq(5).val(), inputs.eq(4).val(), inputs.eq(3).val(), inputs.eq(2).val(), inputs.eq(1).val(), inputs.");
                WriteLiteral(@"eq(0).val(),]
            }]
        };
        const config = {
            type: 'line',
            data: data,
            options: {}
        };
        const myBodyChart = new Chart(
            document.getElementById('myBodyChart'),
            config
        );

    </script>

");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<double[]> Html { get; private set; }
    }
}
#pragma warning restore 1591
