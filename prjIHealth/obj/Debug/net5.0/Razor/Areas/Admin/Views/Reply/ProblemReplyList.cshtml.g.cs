#pragma checksum "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b285b8f28bbf082dc7c6aee74f5ac9de628f50e6"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Admin_Views_Reply_ProblemReplyList), @"mvc.1.0.view", @"/Areas/Admin/Views/Reply/ProblemReplyList.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\_ViewImports.cshtml"
using prjIHealth;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\_ViewImports.cshtml"
using prjIHealth.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b285b8f28bbf082dc7c6aee74f5ac9de628f50e6", @"/Areas/Admin/Views/Reply/ProblemReplyList.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a16e691bc2a8572590ef329eb9d410d52ff20929", @"/_ViewImports.cshtml")]
    public class Areas_Admin_Views_Reply_ProblemReplyList : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<IEnumerable<prjiHealth.ViewModels.CProblemViewModel>>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "999", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "未處理", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "處理中", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "已完成", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "帳號相關", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "訂單相關", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "課程相關", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "商品相關", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "其他建議相關", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
  
    ViewData["Title"] = "iHeath後臺";
    Layout = "~/Areas/Admin/Admin_Layout.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("Styles", async() => {
                WriteLiteral(@"
    <style>
        #title {
            font-weight: 800;
            color: #599e32;
            margin-left: 20vw;
            margin-right: 20vw;
        }
        /*日期選擇器樣式*/
        #divDatepicker {
            border: 4px solid #7fad39;
            border-radius: 20px;    
            padding: 0;
            display: flex;
            justify-content: space-between;
        }

            #divDatepicker input {
                font-size: 16px;
                background-color: #f5f5f5;
                border: none;
            }

        #divDateTake{
            margin-top:4px;
        }

        .fa-caret-left, .fa-caret-right {
            margin-bottom: 4px;
            border: none;
            background-color: transparent;
        }

        .btn-light {
            background-color: #DFEACE !important;
            color: black;
        }

        .btn-success {
            background-color: #7FAD39;
            color: white;
            border: none;
 ");
                WriteLiteral(@"       }

        table.table td {
            vertical-align: middle;
            text-align: center;
        }

        .selectbox {
            margin-left: -1.2%;
        }
        .divSearch {
            width: 70%;
            margin: 15px auto;
        }
    </style>
");
            }
            );
            WriteLiteral("<h2 id=\"title\">客服回覆</h2>\r\n<hr />\r\n<section");
            BeginWriteAttribute("class", " class=\"", 1532, "\"", 1540, 0);
            EndWriteAttribute();
            WriteLiteral(">\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n");
            WriteLiteral("            <div class=\"container\">\r\n                <div class=\"row divSearch\">\r\n                    <div class=\"col-lg-3 col-md-3 selectbox\">\r\n                        <select name=\"stype\" id=\"stype\" class=\"custom-select\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e68109", async() => {
                WriteLiteral("依處理狀態篩選");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("hidden", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e610228", async() => {
                WriteLiteral("未處理");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e611413", async() => {
                WriteLiteral("處理中");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e612598", async() => {
                WriteLiteral("已完成");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col-lg-3 col-md-3\">\r\n                        <select name=\"qtype\" id=\"qtype\" class=\"custom-select\">\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e613995", async() => {
                WriteLiteral("依問題類型篩選");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("disabled", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("selected", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            BeginWriteTagHelperAttribute();
            __tagHelperStringValueBuffer = EndWriteTagHelperAttribute();
            __tagHelperExecutionContext.AddHtmlAttribute("hidden", Html.Raw(__tagHelperStringValueBuffer), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.Minimized);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e616115", async() => {
                WriteLiteral("帳號相關");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e617301", async() => {
                WriteLiteral("訂單相關");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e618487", async() => {
                WriteLiteral("課程相關");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e619673", async() => {
                WriteLiteral("商品相關");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "b285b8f28bbf082dc7c6aee74f5ac9de628f50e620859", async() => {
                WriteLiteral("其他相關");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_8.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_8);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </select>
                    </div>
                    <div class=""col-lg-3 col-md-3"">
                        <div style=""text-align:center;"" id=""divDateTake"">
                            <div id=""divDatepicker"">
                                <button class=""fa fa-caret-left"" id=""btnPrevDate""></button>
                                <input type=""date"" id=""inpDatepicker"" />
                                <button class=""fa fa-caret-right"" id=""btnNextDate""></button>
                            </div>
                        </div>
                    </div>
                    <div class=""col-lg-3 col-md-3"">
                        <div style=""margin-bottom:10px"">
                            <button id=""reload"" class=""btn btn-success"">清空篩選</button>
                        </div>
                    </div>
                </div>
            </div>

            <table class=""table"" style=""table-layout: fixed"">
                <thead class=""thead-dark"">
         ");
            WriteLiteral("           <tr>\r\n                        <th>\r\n                            ");
#nullable restore
#line 111 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayNameFor(model => model.FProblemTime));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </th>\r\n                        <th>\r\n                            類別\r\n                        </th>\r\n                        <th>\r\n                            ");
#nullable restore
#line 117 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayNameFor(model => model.FProblemContent));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
                        </th>
                        <th style=""white-space:nowrap"">
                            會員編號
                        </th>
                        <th style=""white-space:nowrap"">
                            訂單編號
                        </th>
                        <th>
                            ");
#nullable restore
#line 126 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayNameFor(model => model.FEmail));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </th>\r\n                        <th>\r\n                            ");
#nullable restore
#line 129 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayNameFor(model => model.FContactPhone));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </th>\r\n                        <th>\r\n                            狀態\r\n                        </th>\r\n                        <th></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody id=\"changezoon\">\r\n");
#nullable restore
#line 138 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                     foreach (var item in Model)
                    {

#line default
#line hidden
#nullable disable
            WriteLiteral("                    <tr>\r\n                        <td>\r\n                            ");
#nullable restore
#line 142 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.FProblemTime));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td style=\"white-space:nowrap\">\r\n                            ");
#nullable restore
#line 145 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.FProblemCategory.FProblemCategory));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">\r\n                            ");
#nullable restore
#line 148 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.FProblemContent));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n");
#nullable restore
#line 150 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                          
                            string adjmemberid = "";
                            if (item.FMemberId == 9)
                            {
                                adjmemberid = "遊客";
                            }
                            else
                            {
                                adjmemberid = item.FMemberId.ToString();
                            }
                        

#line default
#line hidden
#nullable disable
            WriteLiteral("                        <td>\r\n                            ");
#nullable restore
#line 162 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(adjmemberid);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            ");
#nullable restore
#line 165 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.FOrderId));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td style=\"overflow: hidden; white-space: nowrap; text-overflow: ellipsis;\">\r\n                            ");
#nullable restore
#line 168 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.FEmail));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td>\r\n                            ");
#nullable restore
#line 171 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.FContactPhone));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td style=\"white-space:nowrap\">\r\n                            ");
#nullable restore
#line 174 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.DisplayFor(modelItem => item.Status.FStatus));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                        <td style=\"white-space:nowrap\">\r\n                            ");
#nullable restore
#line 177 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                       Write(Html.ActionLink("回覆", "Reply", new { id = item.FProblemId }, new { @class = "site-btn btn btn-succes" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                        </td>\r\n                    </tr>\r\n");
#nullable restore
#line 180 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                    }

#line default
#line hidden
#nullable disable
            WriteLiteral("                </tbody>\r\n            </table>\r\n");
#nullable restore
#line 183 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
             foreach (var item in Model)
            {

#line default
#line hidden
#nullable disable
            WriteLiteral("                <input type=\"hidden\"");
            BeginWriteAttribute("value", " value=\"", 7162, "\"", 7215, 1);
#nullable restore
#line 185 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
WriteAttributeValue("", 7170, Html.DisplayFor(modelItem => item.FFilePath), 7170, 45, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(">\r\n");
#nullable restore
#line 186 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
            }

#line default
#line hidden
#nullable disable
            WriteLiteral("        </div>\r\n    </div>\r\n</section>\r\n\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"
    <script>
        let ProblemCategoryID = 0;
        function SelectedProblemCategoryID() {          /*判斷所選類別對應的ID*/
            if ($('#qtype').val() == ""帳號相關"")
                ProblemCategoryID = 1;
            if ($('#qtype').val() == ""訂單相關"")
                ProblemCategoryID = 2;
            if ($('#qtype').val() == ""課程相關"")
                ProblemCategoryID = 3;
            if ($('#qtype').val() == ""商品相關"")
                ProblemCategoryID = 4;
            if ($('#qtype').val() == ""其他相關"")
                ProblemCategoryID = 5;
        };
        async  function ChangeByPCID() {         /*依問題類別篩選*/
            $('#changezoon>tr').remove();
            document.getElementById(""stype"").options.selectedIndex = 0;
            SelectedProblemCategoryID();
            const response = await fetch('");
#nullable restore
#line 216 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                                     Write(Url.Content("~/Admin/Reply/SelectByProblemCategoryID"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + `?id=${ProblemCategoryID}`);
            const datas = await response.json();
            let tr = '';
            
            for (i = 0; i < datas.length; i++) {
                if (datas[i].fOrderId == null) {
                    datas[i].fOrderId = """"
                }
                if (datas[i].fMemberId == 9) {
                    datas[i].fMemberId = ""遊客""
                }
                if (datas[i].fEmail == null) {
                    datas[i].fEmail = """"
                }
                if (datas[i].fContactPhone == null) {
                    datas[i].fContactPhone = """"
                }
                tr = `<tr><td>${datas[i].fProblemTime}</td><td style=""white-space:nowrap"">${datas[i].fProblemCategory.fProblemCategory}</td>
                      <td style=""overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"">${datas[i].fProblemContent}</td>
                      <td>${datas[i].fMemberId}</td><td>${datas[i].fOrderId}</td><td style=""overflow: hidden; white-s");
                WriteLiteral(@"pace: nowrap; text-overflow: ellipsis;"">${datas[i].fEmail}</td>
                      <td>${datas[i].fContactPhone}</td><td style=""white-space:nowrap"">${datas[i].status.fStatus}</td><td style=""white-space:nowrap""><a class=""site-btn btn btn-succes"" href=""/Admin/Reply/Reply/${datas[i].fProblemId}"">回覆</a></td></tr>`;
                $('#changezoon').append(tr);
            }
        };
        $('#qtype').on('change', ChangeByPCID);

        let StatusID = 0;
        function SelectedStatusID() {          /*判斷所選狀態對應的ID*/
            if ($('#stype').val() == ""未處理"")
                StatusID = 80;
            if ($('#stype').val() == ""處理中"")
                StatusID = 81;
            if ($('#stype').val() == ""已完成"")
                StatusID = 82;
        };
        async  function ChangeBySatusID() {         /*依處理狀態篩選*/
            $('#changezoon>tr').remove();
            document.getElementById(""qtype"").options.selectedIndex = 0;
            SelectedStatusID();
            const response = await");
                WriteLiteral(" fetch(\'");
#nullable restore
#line 255 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                                     Write(Url.Content("~/Admin/Reply/SelectByStatus"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + `?id=${StatusID}`);
            const datas = await response.json();
            let tr = '';
            
            for (i = 0; i < datas.length; i++) {
                if (datas[i].fOrderId == null) {
                    datas[i].fOrderId = """"
                }
                if (datas[i].fMemberId == 9) {
                    datas[i].fMemberId = ""遊客""
                }
                if (datas[i].fEmail == null) {
                    datas[i].fEmail = """"
                }
                if (datas[i].fContactPhone == null) {
                    datas[i].fContactPhone = """"
                }
                tr = `<tr><td>${datas[i].fProblemTime}</td><td style=""white-space:nowrap"">${datas[i].fProblemCategory.fProblemCategory}</td>
                      <td style=""overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"">${datas[i].fProblemContent}</td>
                      <td>${datas[i].fMemberId}</td><td>${datas[i].fOrderId}</td><td style=""overflow: hidden; white-space: now");
                WriteLiteral(@"rap; text-overflow: ellipsis;"">${datas[i].fEmail}</td>
                      <td>${datas[i].fContactPhone}</td><td style=""white-space:nowrap"">${datas[i].status.fStatus}</td><td style=""white-space:nowrap""><a class=""site-btn btn btn-succes"" href=""/Admin/Reply/Reply/${datas[i].fProblemId}"">回覆</a></td></tr>`;
                $('#changezoon').append(tr);
            }
        };
        $('#stype').on('change', ChangeBySatusID);

        async function Reset() {         /*清空篩選*/
            document.getElementById(""stype"").options.selectedIndex = 0;
            document.getElementById(""qtype"").options.selectedIndex = 0;
            $('#changezoon>tr').remove();
             const response = await fetch('");
#nullable restore
#line 285 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                                      Write(Url.Content("~/Admin/Reply/Reset"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"');
            const datas = await response.json();
             let tr = '';
             
             for (i = 0; i < datas.length; i++) {
                 if (datas[i].fOrderId == null) {
                     datas[i].fOrderId = """"
                 }
                 if (datas[i].fMemberId == 9) {
                     datas[i].fMemberId = ""遊客""
                 }
                 if (datas[i].fEmail == null) {
                     datas[i].fEmail = """"
                 }
                 if (datas[i].fContactPhone == null) {
                     datas[i].fContactPhone = """"
                 }
                tr = `<tr><td>${datas[i].fProblemTime}</td><td style=""white-space:nowrap"">${datas[i].fProblemCategory.fProblemCategory}</td>
                      <td style=""overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"">${datas[i].fProblemContent}</td>
                      <td>${datas[i].fMemberId}</td><td>${datas[i].fOrderId}</td><td style=""overflow: hidden; white-space: nowrap; ");
                WriteLiteral(@"text-overflow: ellipsis;"">${datas[i].fEmail}</td>
                      <td>${datas[i].fContactPhone}</td><td style=""white-space:nowrap"">${datas[i].status.fStatus}</td><td style=""white-space:nowrap""><a class=""site-btn btn btn-succes"" href=""/Admin/Reply/Reply/${datas[i].fProblemId}"">回覆</a></td></tr>`;
                $('#changezoon').append(tr);
            }
        };
        $('#reload').on('click', Reset);

        //Datepicker預設為今日日期
        var today;
        function getToday() {
            let date = new Date();
            let dd = date.getDate();
            let mm = date.getMonth() + 1;
            let yyyy = date.getFullYear();
            if (dd < 10) { dd = '0' + dd }
            if (mm < 10) { mm = '0' + mm }
            today = yyyy + '-' + mm + '-' + dd;
            $(""#inpDatepicker"").attr(""value"", today);
            $(""#inpDatepicker"").attr(""max"", today);
        }
        getToday();

        async  function ChangeDate() {         /*依日期篩選*/
            $('#changezoo");
                WriteLiteral(@"n>tr').remove();
            document.getElementById(""stype"").options.selectedIndex = 0;
            document.getElementById(""qtype"").options.selectedIndex = 0;
            const date = $(""#inpDatepicker"").val();
            const response = await fetch('");
#nullable restore
#line 331 "C:\ispan\GitHub\slnIHealth\0808\prjIHealth\Areas\Admin\Views\Reply\ProblemReplyList.cshtml"
                                     Write(Url.Content("~/Admin/Reply/SelectByDate"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + `?date=${date}`);
            const datas = await response.json();
            let tr = '';
            
            for (i = 0; i < datas.length; i++) {
                if (datas[i].fOrderId == null) {
                    datas[i].fOrderId = """"
                }
                if (datas[i].fMemberId == 9) {
                    datas[i].fMemberId = ""遊客""
                }
                if (datas[i].fEmail == null) {
                    datas[i].fEmail = """"
                }
                if (datas[i].fContactPhone == null) {
                    datas[i].fContactPhone = """"
                }
                tr = `<tr><td>${datas[i].fProblemTime}</td><td style=""white-space:nowrap"">${datas[i].fProblemCategory.fProblemCategory}</td>
                      <td style=""overflow: hidden; white-space: nowrap; text-overflow: ellipsis;"">${datas[i].fProblemContent}</td>
                      <td>${datas[i].fMemberId}</td><td>${datas[i].fOrderId}</td><td style=""overflow: hidden; white-space: nowra");
                WriteLiteral(@"p; text-overflow: ellipsis;"">${datas[i].fEmail}</td>
                      <td>${datas[i].fContactPhone}</td><td style=""white-space:nowrap"">${datas[i].status.fStatus}</td><td style=""white-space:nowrap""><a class=""site-btn btn btn-succes"" href=""/Admin/Reply/Reply/${datas[i].fProblemId}"">回覆</a></td></tr>`;
                $('#changezoon').append(tr);
            }
        };
        //Datepicker事件
        $(""#inpDatepicker"").change(function () {
            ChangeDate()
        })
        //前一天按鈕事件
        $(""#btnPrevDate"").click(function () {
            let date = new Date($(""#inpDatepicker"").val().replace(/-/g, ""/""));
            date.setDate(date.getDate() - 1);
            let dd = date.getDate();
            let mm = date.getMonth() + 1;
            let yyyy = date.getFullYear();
            if (dd < 10) { dd = '0' + dd }
            if (mm < 10) { mm = '0' + mm }
            let theDate = yyyy + '-' + mm + '-' + dd;
            $(""#inpDatepicker"").val(theDate);
            ChangeDate()");
                WriteLiteral(@"
        })
        //後一天按鈕事件
        $(""#btnNextDate"").click(function () {
            if ($(""#inpDatepicker"").val() < today) {
                let date = new Date($(""#inpDatepicker"").val().replace(/-/g, ""/""));
                date.setDate(date.getDate() + 1);
                let dd = date.getDate();
                let mm = date.getMonth() + 1;
                let yyyy = date.getFullYear();
                if (dd < 10) { dd = '0' + dd }
                if (mm < 10) { mm = '0' + mm }
                let theDate = yyyy + '-' + mm + '-' + dd;
                $(""#inpDatepicker"").val(theDate);
                ChangeDate()
            }
        })
    </script>
");
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IEnumerable<prjiHealth.ViewModels.CProblemViewModel>> Html { get; private set; }
    }
}
#pragma warning restore 1591
